- assessment ||= @lesson.assessments.where(student: student).first_or_initialize
- objectives = assessment.assessor.objectives

%tr{ id: "student_#{ student.id }", class: likert_style(assessment.score) }
  %td.lead.student= student.name

  %td
    = bootstrap_form_for [@group, assessment], remote: true, layout: :inline do |assessment_f|
      = assessment_f.hidden_field :assessor_id
      = assessment_f.hidden_field :assessor_type
      = assessment_f.hidden_field :student_id

      = assessment_f.select :indicator_id,
        objectives.map{ |t| [truncate(t.stream, length: 20), t.indicator_id]},
        hide_label: true

      = render partial: 'assessments/likert_score',
        locals: { assessment_f: assessment_f }

      = assessment_f.submit 'Save', class: 'hidden'

    %td.attempt
      - objectives.each do |objective|
        - assessment.previous_attempts_by(student, objectives.map(&:indicator)).each do |attempt|
          = render partial: "assessments/attempt", locals: { attempt: attempt, objective: objective }
